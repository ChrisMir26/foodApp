{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\n// Definimos el estado inicial del carrito\nconst initialState = {\n  products: [] // Inicialmente, el carrito está vacío\n};\n\n// Creamos un \"slice\" de Redux llamado \"cart\"\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  // Nombre del \"slice\"\n  initialState,\n  // Estado inicial del \"slice\"\n  reducers: {\n    // Acción para agregar un producto al carrito\n    addToCart: (state, action) => {\n      return {\n        products: [...state.products, {\n          ...action.payload,\n          amount: 1\n        }]\n      };\n    },\n    // Acción para vaciar el carrito\n    clearCart: state => {\n      return {\n        products: [] // El carrito se vacía\n      };\n    },\n\n    // Acción para incrementar la cantidad de un producto en el carrito\n    incrementProductAmount: (state, action) => {\n      return {\n        products: state.products.map(product => product.id === action.payload.id ? {\n          ...product,\n          amount: product.amount += product.amount\n        } : product)\n      };\n    },\n    // Acción para decrementar la cantidad de un producto en el carrito\n    decrementProductAmount: (state, action) => {\n      return {\n        products: state.products.map(product => product.id === action.payload.id ? {\n          ...product,\n          amount: product.amount - 1\n        } : product)\n      };\n    }\n  }\n});\n\n// Exportamos las acciones generadas automáticamente por createSlice\nexport const {\n  addToCart,\n  clearCart,\n  incrementProductAmount,\n  decrementProductAmount\n} = cartSlice.actions;\n\n// Exportamos el reducidor generado automáticamente por createSlice\nexport default cartSlice.reducer;\nexport const cartProducts = state => state.cart.products;","map":{"version":3,"names":["createSlice","initialState","products","cartSlice","name","reducers","addToCart","state","action","payload","amount","clearCart","incrementProductAmount","map","product","id","decrementProductAmount","actions","reducer","cartProducts","cart"],"sources":["/Users/chris/Desktop/food-ordering-app/front/src/store/cart/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n// Definimos el estado inicial del carrito\nconst initialState = {\n  products: [], // Inicialmente, el carrito está vacío\n};\n\n// Creamos un \"slice\" de Redux llamado \"cart\"\nexport const cartSlice = createSlice({\n  name: \"cart\", // Nombre del \"slice\"\n  initialState, // Estado inicial del \"slice\"\n  reducers: {\n    // Acción para agregar un producto al carrito\n    addToCart: (state, action) => {\n      return {\n        products: [...state.products, { ...action.payload, amount: 1 }],\n      };\n    },\n    // Acción para vaciar el carrito\n    clearCart: (state) => {\n      return {\n        products: [], // El carrito se vacía\n      };\n    },\n    // Acción para incrementar la cantidad de un producto en el carrito\n    incrementProductAmount: (state, action) => {\n      return {\n        products: state.products.map((product) =>\n          product.id === action.payload.id\n            ? { ...product, amount: product.amount+=product.amount }\n            : product\n        ),\n      };\n    },\n    // Acción para decrementar la cantidad de un producto en el carrito\n    decrementProductAmount: (state, action) => {\n      return {\n        products: state.products.map((product) =>\n          product.id === action.payload.id\n            ? { ...product, amount: product.amount - 1 }\n            : product\n        ),\n      };\n    },\n  },\n});\n\n// Exportamos las acciones generadas automáticamente por createSlice\nexport const {\n  addToCart,\n  clearCart,\n  incrementProductAmount,\n  decrementProductAmount,\n} = cartSlice.actions;\n\n// Exportamos el reducidor generado automáticamente por createSlice\nexport default cartSlice.reducer;\n\n\nexport const cartProducts = state => state.cart.products"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE,CAAE;AAChB,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAGH,WAAW,CAAC;EACnCI,IAAI,EAAE,MAAM;EAAE;EACdH,YAAY;EAAE;EACdI,QAAQ,EAAE;IACR;IACAC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5B,OAAO;QACLN,QAAQ,EAAE,CAAC,GAAGK,KAAK,CAACL,QAAQ,EAAE;UAAE,GAAGM,MAAM,CAACC,OAAO;UAAEC,MAAM,EAAE;QAAE,CAAC;MAChE,CAAC;IACH,CAAC;IACD;IACAC,SAAS,EAAGJ,KAAK,IAAK;MACpB,OAAO;QACLL,QAAQ,EAAE,EAAE,CAAE;MAChB,CAAC;IACH,CAAC;;IACD;IACAU,sBAAsB,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MACzC,OAAO;QACLN,QAAQ,EAAEK,KAAK,CAACL,QAAQ,CAACW,GAAG,CAAEC,OAAO,IACnCA,OAAO,CAACC,EAAE,KAAKP,MAAM,CAACC,OAAO,CAACM,EAAE,GAC5B;UAAE,GAAGD,OAAO;UAAEJ,MAAM,EAAEI,OAAO,CAACJ,MAAM,IAAEI,OAAO,CAACJ;QAAO,CAAC,GACtDI,OACN;MACF,CAAC;IACH,CAAC;IACD;IACAE,sBAAsB,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MACzC,OAAO;QACLN,QAAQ,EAAEK,KAAK,CAACL,QAAQ,CAACW,GAAG,CAAEC,OAAO,IACnCA,OAAO,CAACC,EAAE,KAAKP,MAAM,CAACC,OAAO,CAACM,EAAE,GAC5B;UAAE,GAAGD,OAAO;UAAEJ,MAAM,EAAEI,OAAO,CAACJ,MAAM,GAAG;QAAE,CAAC,GAC1CI,OACN;MACF,CAAC;IACH;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EACXR,SAAS;EACTK,SAAS;EACTC,sBAAsB;EACtBI;AACF,CAAC,GAAGb,SAAS,CAACc,OAAO;;AAErB;AACA,eAAed,SAAS,CAACe,OAAO;AAGhC,OAAO,MAAMC,YAAY,GAAGZ,KAAK,IAAIA,KAAK,CAACa,IAAI,CAAClB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
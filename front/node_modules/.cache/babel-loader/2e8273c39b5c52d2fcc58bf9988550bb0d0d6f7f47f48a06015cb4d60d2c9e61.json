{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/food-ordering-app/front/src/components/ProductReview.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductReview = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:4000/api/product`).then(res => {\n      if (!res.ok) {\n        // Si el status HTTP no es 2xx, lanzamos un error.\n        throw new Error(`HTTP error! Status: ${res.status}`);\n      }\n      return res.json();\n    }).then(data => {\n      if (data) {\n        setProducts(data);\n      } else {\n        throw new Error('Data received is empty or invalid.');\n      }\n    }).catch(error => {\n      console.log(error);\n      // Aquí puedes mostrar algún mensaje al usuario si lo deseas.\n      // Por ejemplo: setErrorMessage('Sorry, we have an issue.');\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto pb-4 w-2/3\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-white\",\n      children: \" PRODUCTSSS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductReview, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = ProductReview;\nexport default ProductReview;\nvar _c;\n$RefreshReg$(_c, \"ProductReview\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ProductReview","_s","products","setProducts","fetch","then","res","ok","Error","status","json","data","catch","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chris/Desktop/food-ordering-app/front/src/components/ProductReview.jsx"],"sourcesContent":["import React,{useState,useEffect} from 'react'\n\n\nconst ProductReview = () => {\n    const [products, setProducts] = useState([])\n\n    useEffect(() => {\n        fetch(`http://localhost:4000/api/product`)\n        .then(res => {\n            if (!res.ok) { // Si el status HTTP no es 2xx, lanzamos un error.\n                throw new Error(`HTTP error! Status: ${res.status}`);\n            }\n            return res.json();\n        })\n        .then(data => {\n            if (data) {\n                setProducts(data);\n            } else {\n                throw new Error('Data received is empty or invalid.');\n            }\n        })\n        .catch(error => {\n            console.log(error);\n            // Aquí puedes mostrar algún mensaje al usuario si lo deseas.\n            // Por ejemplo: setErrorMessage('Sorry, we have an issue.');\n        });\n    }, []);\n    \n    \n    \n    \n    \n    \n\n\n  return (\n    <div className='container mx-auto pb-4 w-2/3'>\n        <h2 className='text-white'> PRODUCTSSS</h2>\n    </div>\n  )\n}\n\nexport default ProductReview"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG9C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZO,KAAK,CAAE,mCAAkC,CAAC,CACzCC,IAAI,CAACC,GAAG,IAAI;MACT,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;QAAE;QACX,MAAM,IAAIC,KAAK,CAAE,uBAAsBF,GAAG,CAACG,MAAO,EAAC,CAAC;MACxD;MACA,OAAOH,GAAG,CAACI,IAAI,CAAC,CAAC;IACrB,CAAC,CAAC,CACDL,IAAI,CAACM,IAAI,IAAI;MACV,IAAIA,IAAI,EAAE;QACNR,WAAW,CAACQ,IAAI,CAAC;MACrB,CAAC,MAAM;QACH,MAAM,IAAIH,KAAK,CAAC,oCAAoC,CAAC;MACzD;IACJ,CAAC,CAAC,CACDI,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB;MACA;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EASR,oBACEd,OAAA;IAAKiB,SAAS,EAAC,8BAA8B;IAAAC,QAAA,eACzClB,OAAA;MAAIiB,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV,CAAC;AAAApB,EAAA,CArCKD,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AAuCnB,eAAeA,aAAa;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}